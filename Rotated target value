class Solution {
    public int search(int[] nums, int target)
    {

        
      int n=nums.length;//length of the array
      int low=0;
      int high=n-1;
        
      while(low<=high)
      {
          //if target value is found at mid value in the nums array it return mid index.
          int mid=(low+high)/2; 
          if(nums[mid]==target)
          {
              return mid;
          }
          //if nums lower index value is less than mid value then it is sorted in ascending order.
          if(nums[low]<=nums[mid])
          {
             //if target lies between nums[low] and nums[mid] then high value changes to  mid-1 or else low value changes mid+1
              
             if(target>=nums[low] && target<nums[mid])
             {
                
                high=mid-1;
             }
             else
             {
                 low=mid+1;
             }
              
          }
          else
          {.
              //if target lies between nums[mid] and nums[high] then high value changes to  mid-1 or else low value changes mid+1.
              if(target>nums[mid] && target<=nums[high])
              {
                  low=mid+1;
              }
              else
              {
                  high=mid-1;
              }
          }
      }
      return -1;  
        
    }
}
